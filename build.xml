<?eclipse.ant.imvalue?>
<project name="Sharix" basedir="." default="main">

	<property name="src.dir" value="src" />

	<property name="build.dir" value="build" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/jar" />

	<property name="main-class" value="core.GUI_Main" />

	<property name="lib.dir" value="lib" />

	<property name="revalue.dir" value="${build.dir}/junitrevalue" />

	<path id="classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<path id="application" location="${jar.dir}/${ant.project.name}.jar" />

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="compile">
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" />
		<copy todir="${classes.dir}">
			<fileset dir="${basedir}" excludes="**/*.java" />
		</copy>
	</target>

	<target name="jar" depends="compile">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}" />
			</manifest>
		</jar>
	</target>

	<target name="run-all" depends="jar">
		<parallel>
			<java jar="${jar.dir}/${ant.project.name}.jar" fork="true">
				<arg value="homer" />
				<arg value="6501" />
				<classpath>
					<path refid="classpath" />
					<path location="${jar.dir}/${ant.project.name}.jar" />
					<path refid="application" />
				</classpath>
			</java>
			<java jar="${jar.dir}/${ant.project.name}.jar" fork="true">
				<arg value="marge" />
				<arg value="6502" />
				<classpath>
					<path refid="classpath" />
					<path location="${jar.dir}/${ant.project.name}.jar" />
					<path refid="application" />
				</classpath>
			</java>
			<java jar="${jar.dir}/${ant.project.name}.jar" fork="true">
				<arg value="lisa" />
				<arg value="6503" />
				<classpath>
					<path refid="classpath" />
					<path location="${jar.dir}/${ant.project.name}.jar" />
					<path refid="application" />
				</classpath>
			</java>
			<java jar="${jar.dir}/${ant.project.name}.jar" fork="true">
				<arg value="bart" />
				<arg value="6504" />
				<classpath>
					<path refid="classpath" />
					<path location="${jar.dir}/${ant.project.name}.jar" />
					<path refid="application" />
				</classpath>
			</java>
		</parallel>
	</target>

	<target name="test" depends="jar">
		<mkdir dir="${revalue.dir}" />
		<parallel>
			<sequential>
				<junit printsummary="yes">
					<classpath>
						<path refid="classpath" />
						<path refid="application" />
					</classpath>

					<formatter type="xml" />

					<batchtest fork="yes">
						<fileset dir="${src.dir}" includes="test/TestHomer.java" />
					</batchtest>

					<junitrevalue todir="${revalue.dir}">
						<fileset dir="${revalue.dir}" includes="TEST-Homer.xml" />
						<revalue todir="${revalue.dir}" />
					</junitrevalue>
				</junit>
				<sleep seconds="4" />
			</sequential>
			<sequential>
				<junit printsummary="yes">
					<classpath>
						<path refid="classpath" />
						<path refid="application" />
					</classpath>

					<formatter type="xml" />

					<batchtest fork="yes">
						<fileset dir="${src.dir}" includes="test/TestLisa.java" />
					</batchtest>

					<junitrevalue todir="${revalue.dir}">
						<fileset dir="${revalue.dir}" includes="TEST-Lisa.xml" />
						<revalue todir="${revalue.dir}" />
					</junitrevalue>
				</junit>
				<sleep seconds="4" />
			</sequential>
			<sequential>
				<junit printsummary="yes">
					<classpath>
						<path refid="classpath" />
						<path refid="application" />
					</classpath>

					<formatter type="xml" />

					<batchtest fork="yes">
						<fileset dir="${src.dir}" includes="test/TestBart.java" />
					</batchtest>

					<junitrevalue todir="${revalue.dir}">
						<fileset dir="${revalue.dir}" includes="TEST-Bart.xml" />
						<revalue todir="${revalue.dir}" />
					</junitrevalue>
				</junit>
				<sleep seconds="4" />
			</sequential>
			<sequential>
				<junit printsummary="yes">
					<classpath>
						<path refid="classpath" />
						<path refid="application" />
					</classpath>

					<formatter type="xml" />

					<batchtest fork="yes">
						<fileset dir="${src.dir}" includes="test/TestMarge.java" />
					</batchtest>

					<junitrevalue todir="${revalue.dir}">
						<fileset dir="${revalue.dir}" includes="TEST-Marge.xml" />
						<revalue todir="${revalue.dir}" />
					</junitrevalue>
				</junit>
				<sleep seconds="4" />
			</sequential>
		</parallel>
	</target>

	<target name="clean-and-build" depends="clean,jar" />

	<target name="run-single" depends="jar">
		<java jar="${jar.dir}/${ant.project.name}.jar" fork="true">
			<arg value="homer" />
			<arg value="6501" />
			<classpath>
				<path refid="classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
				<path refid="application" />
			</classpath>
		</java>
	</target>

	<target name="main" depends="clean,run-all" />

</project>